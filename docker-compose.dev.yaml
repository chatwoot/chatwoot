services:
  rails:
    build:
      context: .
      dockerfile: Dockerfile.dev
    env_file: .env
    environment:
      - NODE_ENV=development
      - RAILS_ENV=development
      - INSTALLATION_ENV=docker
      - POSTGRES_HOST=db
      - REDIS_URL=redis://redis:6379
    volumes:
      - .:/app
      - gem_cache:/gems
      - node_modules:/app/node_modules
    ports:
      - '3000:3000'
    networks:
      - chatwoot-network
    command: sh -c "cd /app && bundle check || bundle install && bundle exec rails s -p 3000 -b 0.0.0.0"
    depends_on:
      - db
      - redis

  sidekiq:
    build:
      context: .
      dockerfile: Dockerfile.dev
    env_file: .env
    environment:
      - NODE_ENV=development
      - RAILS_ENV=development
      - INSTALLATION_ENV=docker
      - POSTGRES_HOST=db
      - REDIS_URL=redis://redis:6379
    volumes:
      - .:/app
      - gem_cache:/gems
      - node_modules:/app/node_modules
    networks:
      - chatwoot-network
    command: sh -c "cd /app && bundle check || bundle install && bundle exec sidekiq -C config/sidekiq.yml"
    depends_on:
      - db
      - redis

  db:
    image: pgvector/pgvector:pg16
    restart: unless-stopped
    env_file: .env
    environment:
      - POSTGRES_DB=chatwoot
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - '5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - chatwoot-network

  redis:
    image: redis:alpine
    restart: unless-stopped
    command: ["sh", "-c", "redis-server --requirepass \"$REDIS_PASSWORD\""]
    env_file: .env
    volumes:
      - redis-data:/data
    ports:
      - '6379:6379'
    networks:
      - chatwoot-network

  mailhog:
    restart: unless-stopped
    image: mailhog/mailhog
    ports:
      - '1025:1025'
      - '8025:8025'
    networks:
      - chatwoot-network

networks:
  chatwoot-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  gem_cache:
  node_modules: 