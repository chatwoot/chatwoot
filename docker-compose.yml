
services:
  # postgres:
  #   image: ankane/pgvector:latest
  #   restart: always
  #   env_file:
  #     - .env
  #   volumes:
  #     - postgres-data:/var/lib/postgresql/data
  #   environment:
  #     POSTGRES_DB: ${POSTGRES_DB}
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 5

  # redis:
  #   image: redis:6
  #   restart: always
  redis:
    image: redis:alpine
    restart: always
    command: ["sh", "-c", "redis-server --requirepass \"$REDIS_PASSWORD\""]
    env_file: .env
    volumes:
      - /data/redis:/data
    ports:
      - '127.0.0.1:6379:6379'

  rails:
    build:
      context: .
      dockerfile: ./docker/dockerfiles/rails.Dockerfile
    image: chatwoot-dev
    ports:
      - "3000:3000"
    env_file:
      - .env
    volumes:
      - .:/app:delegated
      - node_modules:/app/node_modules
      - packs:/app/public/packs
      - tmp:/app/tmp/cache
      - bundle:/usr/local/bundle
    depends_on:
      # - postgres
      - redis
    working_dir: /app
    environment:
      RAILS_ENV: ${RAILS_ENV}
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
      FRONTEND_URL: ${FRONTEND_URL}
      DEFAULT_LOCALE: ${DEFAULT_LOCALE}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_DB: ${POSTGRES_DB}      # Updated: was POSTGRES_DATABASE
      POSTGRES_USER: ${POSTGRES_USER}  # Updated: was POSTGRES_USERNAME
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      REDIS_URL: ${REDIS_URL}
      GOOGLE_OAUTH_CLIENT_ID: ${GOOGLE_OAUTH_CLIENT_ID}
      GOOGLE_OAUTH_CLIENT_SECRET: ${GOOGLE_OAUTH_CLIENT_SECRET}
      IP_LOOKUP_API_KEY: ${IP_LOOKUP_API_KEY}
    command: ["bundle", "exec", "rails", "s", "-b", "0.0.0.0"]

volumes:
  # postgres-data:
  node_modules:
  packs:
  tmp:
  bundle:

