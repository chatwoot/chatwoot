version: '3'

services:
  base: &base
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      args:
        BUNDLE_WITHOUT: 'development:test'
        EXECJS_RUNTIME: Disabled
        RAILS_ENV: 'production'
        RAILS_SERVE_STATIC_FILES: 'true'
    image: vegavision:latest
    env_file: .env ## Change this file for customized env variables

  rails:
    <<: *base
    image: vegavision:latest
    depends_on:
      #- postgres
      - redis
    ports:
      - 3001:3000
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
    entrypoint: docker/entrypoints/rails.sh
    command: ['bundle', 'exec', 'rails', 's', '-p', '3000', '-b', '0.0.0.0']
    networks:
      - VV-Internal
      - public-proxy

  sidekiq:
    <<: *base
    image: vegavision:latest
    depends_on:
      #- postgres
      - redis
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
    command: ['bundle', 'exec', 'sidekiq', '-C', 'config/sidekiq.yml']
    networks:
      - VV-Internal
      - public-proxy

      #postgres:
      #image: pgvector/pgvector:pg16
      #restart: always
      #ports:
      #- '5432:5432'
      #volumes:
      #- postgres:/data/postgres
      #environment:
      #- POSTGRES_DB=chatwoot
      #- POSTGRES_USER=postgres
      #- POSTGRES_PASSWORD=Password123

  redis:
    image: redis:alpine
    restart: always
    command: ["sh", "-c", "redis-server --requirepass \"$REDIS_PASSWORD\""]
    env_file: .env
    volumes:
      - redis:/data/redis
    ports:
      - '6379:6379'
    networks:
      - VV-Internal
      - public-proxy

volumes:
  #postgres:
  redis:
  bundle:
  packs:
  node_modules_rails:

networks:
  VV-Internal:
    name: VV-Internal
    driver: bridge

  public-proxy:
    external: true
