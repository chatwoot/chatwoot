{"version":3,"file":"getCLS.js","sources":["../../../../src/metrics/web-vitals/getCLS.ts"],"sourcesContent":["/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bindReporter } from './lib/bindReporter';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport { runOnce } from './lib/runOnce';\nimport { onFCP } from './onFCP';\nimport type { CLSMetric, CLSReportCallback, MetricRatingThresholds, ReportOpts } from './types';\n\n/** Thresholds for CLS. See https://web.dev/articles/cls#what_is_a_good_cls_score */\nexport const CLSThresholds: MetricRatingThresholds = [0.1, 0.25];\n\n/**\n * Calculates the [CLS](https://web.dev/articles/cls) value for the current page and\n * calls the `callback` function once the value is ready to be reported, along\n * with all `layout-shift` performance entries that were used in the metric\n * value calculation. The reported value is a `double` (corresponding to a\n * [layout shift score](https://web.dev/articles/cls#layout_shift_score)).\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called as soon as the value is initially\n * determined as well as any time the value changes throughout the page\n * lifespan.\n *\n * _**Important:** CLS should be continually monitored for changes throughout\n * the entire lifespan of a pageâ€”including if the user returns to the page after\n * it's been hidden/backgrounded. However, since browsers often [will not fire\n * additional callbacks once the user has backgrounded a\n * page](https://developer.chrome.com/blog/page-lifecycle-api/#advice-hidden),\n * `callback` is always called when the page's visibility state changes to\n * hidden. As a result, the `callback` function might be called multiple times\n * during the same page load._\n */\nexport const onCLS = (onReport: CLSReportCallback, opts: ReportOpts = {}): void => {\n  // Start monitoring FCP so we can only report CLS if FCP is also reported.\n  // Note: this is done to match the current behavior of CrUX.\n  onFCP(\n    runOnce(() => {\n      const metric = initMetric('CLS', 0);\n      let report: ReturnType<typeof bindReporter>;\n\n      let sessionValue = 0;\n      let sessionEntries: LayoutShift[] = [];\n\n      const handleEntries = (entries: LayoutShift[]): void => {\n        entries.forEach(entry => {\n          // Only count layout shifts without recent user input.\n          if (!entry.hadRecentInput) {\n            const firstSessionEntry = sessionEntries[0];\n            const lastSessionEntry = sessionEntries[sessionEntries.length - 1];\n\n            // If the entry occurred less than 1 second after the previous entry\n            // and less than 5 seconds after the first entry in the session,\n            // include the entry in the current session. Otherwise, start a new\n            // session.\n            if (\n              sessionValue &&\n              firstSessionEntry &&\n              lastSessionEntry &&\n              entry.startTime - lastSessionEntry.startTime < 1000 &&\n              entry.startTime - firstSessionEntry.startTime < 5000\n            ) {\n              sessionValue += entry.value;\n              sessionEntries.push(entry);\n            } else {\n              sessionValue = entry.value;\n              sessionEntries = [entry];\n            }\n          }\n        });\n\n        // If the current session value is larger than the current CLS value,\n        // update CLS and the entries contributing to it.\n        if (sessionValue > metric.value) {\n          metric.value = sessionValue;\n          metric.entries = sessionEntries;\n          report();\n        }\n      };\n\n      const po = observe('layout-shift', handleEntries);\n      if (po) {\n        report = bindReporter(onReport, metric, CLSThresholds, opts.reportAllChanges);\n\n        onHidden(() => {\n          handleEntries(po.takeRecords() as CLSMetric['entries']);\n          report(true);\n        });\n\n        // Queue a task to report (if nothing else triggers a report first).\n        // This allows CLS to be reported as soon as FCP fires when\n        // `reportAllChanges` is true.\n        setTimeout(report, 0);\n      }\n    }),\n  );\n};\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AASA;AACO,MAAM,aAAa,GAA2B,CAAC,GAAG,EAAE,IAAI,EAAC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,KAAM,GAAE,CAAC,QAAQ,EAAqB,IAAI,GAAe,EAAE,KAAW;AACnF;AACA;AACA,EAAE,KAAK;AACP,IAAI,OAAO,CAAC,MAAM;AAClB,MAAM,MAAM,SAAS,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC,CAAA;AACzC,MAAM,IAAI,MAAM,CAAA;AAChB;AACA,MAAM,IAAI,YAAa,GAAE,CAAC,CAAA;AAC1B,MAAM,IAAI,cAAc,GAAkB,EAAE,CAAA;AAC5C;AACA,MAAM,MAAM,aAAA,GAAgB,CAAC,OAAO,KAA0B;AAC9D,QAAQ,OAAO,CAAC,OAAO,CAAC,SAAS;AACjC;AACA,UAAU,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE;AACrC,YAAY,MAAM,iBAAkB,GAAE,cAAc,CAAC,CAAC,CAAC,CAAA;AACvD,YAAY,MAAM,gBAAiB,GAAE,cAAc,CAAC,cAAc,CAAC,MAAA,GAAS,CAAC,CAAC,CAAA;AAC9E;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,cAAc,YAAa;AAC3B,cAAc,iBAAkB;AAChC,cAAc,gBAAiB;AAC/B,cAAc,KAAK,CAAC,SAAU,GAAE,gBAAgB,CAAC,SAAA,GAAY,IAAK;AAClE,cAAc,KAAK,CAAC,SAAA,GAAY,iBAAiB,CAAC,YAAY,IAAA;AAC9D,cAAc;AACd,cAAc,YAAa,IAAG,KAAK,CAAC,KAAK,CAAA;AACzC,cAAc,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;AACxC,mBAAmB;AACnB,cAAc,YAAa,GAAE,KAAK,CAAC,KAAK,CAAA;AACxC,cAAc,cAAe,GAAE,CAAC,KAAK,CAAC,CAAA;AACtC,aAAY;AACZ,WAAU;AACV,SAAS,CAAC,CAAA;AACV;AACA;AACA;AACA,QAAQ,IAAI,YAAA,GAAe,MAAM,CAAC,KAAK,EAAE;AACzC,UAAU,MAAM,CAAC,KAAM,GAAE,YAAY,CAAA;AACrC,UAAU,MAAM,CAAC,OAAQ,GAAE,cAAc,CAAA;AACzC,UAAU,MAAM,EAAE,CAAA;AAClB,SAAQ;AACR,OAAO,CAAA;AACP;AACA,MAAM,MAAM,KAAK,OAAO,CAAC,cAAc,EAAE,aAAa,CAAC,CAAA;AACvD,MAAM,IAAI,EAAE,EAAE;AACd,QAAQ,MAAO,GAAE,YAAY,CAAC,QAAQ,EAAE,MAAM,EAAE,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAA;AACrF;AACA,QAAQ,QAAQ,CAAC,MAAM;AACvB,UAAU,aAAa,CAAC,EAAE,CAAC,WAAW,IAA2B,CAAA;AACjE,UAAU,MAAM,CAAC,IAAI,CAAC,CAAA;AACtB,SAAS,CAAC,CAAA;AACV;AACA;AACA;AACA;AACA,QAAQ,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,CAAA;AAC7B,OAAM;AACN,KAAK,CAAC;AACN,GAAG,CAAA;AACH;;;;"}