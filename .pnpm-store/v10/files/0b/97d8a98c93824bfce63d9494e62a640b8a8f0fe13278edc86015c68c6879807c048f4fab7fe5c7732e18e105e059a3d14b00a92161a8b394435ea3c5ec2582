{"version":3,"file":"index.js","sources":["../src/build-country.js","../src/build-timezone.js","../src/index.js"],"sourcesContent":["let timezonesMap;\n\nexport default function buildCountry(data, id) {\n  const name = data.countries[id];\n  if (!name) return null;\n\n  const tzMap = getTimezonesMap(data)[id] || {};\n\n  return {\n    id,\n    name,\n    timezones: tzMap.current || [],\n    allTimezones: tzMap.all || [],\n  };\n}\n\nfunction getTimezonesMap(data) {\n  if (!timezonesMap) timezonesMap = buildTimezonesMap(data);\n  return timezonesMap;\n}\n\nfunction buildTimezonesMap(data) {\n  return Object.keys(data.timezones).reduce((result, id) => {\n    const tz = data.timezones[id];\n    const { c, a } = tz;\n    const aliasTz = data.timezones[a] || {};\n    const countries = c || aliasTz.c;\n\n    if (!countries) return result;\n\n    countries.forEach((country) => {\n      if (!result[country]) Object.assign(result, { [country]: { current: [], all: [] } });\n      if (tz.r === undefined) result[country].current.push(id);\n      result[country].all.push(id);\n    });\n\n    return result;\n  }, {});\n}\n","export default function buildTimezone(data, name) {\n  const timezone = data.timezones[name];\n  if (!timezone) return null;\n\n  const { a: aliasOf = null } = timezone;\n  const aliasTz = aliasOf ? data.timezones[aliasOf] : {};\n  const tz = {\n    ...aliasTz,\n    ...data.timezones[name],\n  };\n\n  const countries = tz.c || [];\n  const utcOffset = tz.u;\n  const dstOffset = Number.isInteger(tz.d) ? tz.d : utcOffset;\n\n  const result = {\n    name,\n    countries,\n    utcOffset,\n    utcOffsetStr: getOffsetStr(utcOffset),\n    dstOffset,\n    dstOffsetStr: getOffsetStr(dstOffset),\n    aliasOf,\n  };\n  if (timezone.r) result.deprecated = true;\n  return result;\n}\n\nfunction getOffsetStr(offset) {\n  const hours = Math.floor(Math.abs(offset) / 60);\n  const min = offset % 60;\n  const sign = offset < 0 ? '-' : '+';\n\n  return `${sign}${getNumStr(hours)}:${getNumStr(min)}`;\n}\n\nfunction getNumStr(input) {\n  const num = Math.abs(input);\n  const prefix = num < 10 ? '0' : '';\n  return `${prefix}${num}`;\n}\n","import data from './data.json';\nimport buildCountry from './build-country';\nimport buildTimezone from './build-timezone';\n\nconst totalTimezones = Object.keys(data.timezones).length;\nconst countries = {};\nconst timezones = {};\nlet memoizedTimezones = 0;\n\nexport function getAllCountries(options = {}) {\n  return Object.keys(data.countries).reduce((prev, id) => {\n    return Object.assign(prev, { [id]: getCountry(id, options) });\n  }, {});\n}\n\nexport function getAllTimezones(options = {}) {\n  if (totalTimezones !== memoizedTimezones) Object.keys(data.timezones).forEach(getTimezone);\n  return deliverTimezones(timezones, options);\n}\n\nexport function getCountry(id, options = {}) {\n  if (!countries[id]) memoizeCountry(buildCountry(data, id));\n  return deliverCountry(countries[id], options);\n}\n\nfunction memoizeCountry(country) {\n  if (!country) return;\n  countries[country.id] = country;\n}\n\nexport function getTimezone(name) {\n  if (!timezones[name]) memoizeTimezone(buildTimezone(data, name));\n  return timezones[name] ? { ...timezones[name] } : null;\n}\n\nfunction memoizeTimezone(timezone) {\n  if (!timezone) return;\n  timezones[timezone.name] = timezone;\n  memoizedTimezones = Object.keys(timezone).length;\n}\n\nexport function getCountriesForTimezone(tzName, options = {}) {\n  const timezone = getTimezone(tzName) || {};\n  const values = timezone.countries || [];\n  return values.map((c) => getCountry(c, options));\n}\n\nexport function getCountryForTimezone(tzName, options = {}) {\n  const [main] = getCountriesForTimezone(tzName, options);\n  return main || null;\n}\n\nexport function getTimezonesForCountry(countryId, options = {}) {\n  const country = getCountry(countryId, options);\n  if (!country) return null;\n  const values = country.timezones || [];\n  return values.map(getTimezone);\n}\n\nfunction deliverTimezones(tzs, options) {\n  const { deprecated } = options || {};\n  if (deprecated === true) return tzs;\n  return Object.keys(tzs).reduce((prev, key) => {\n    if (!tzs[key].deprecated) Object.assign(prev, { [key]: tzs[key] });\n    return prev;\n  }, {});\n}\n\nfunction deliverCountry(country, options) {\n  if (!country) return null;\n  const { deprecated } = options || {};\n  const { allTimezones, ...other } = country;\n  const tz = deprecated ? country.allTimezones : country.timezones;\n  return { ...other, timezones: tz };\n}\n\nexport default {\n  getCountry,\n  getTimezone,\n  getAllCountries,\n  getAllTimezones,\n  getTimezonesForCountry,\n  getCountriesForTimezone,\n  getCountryForTimezone,\n};\n"],"names":["timezonesMap","buildCountry","data","id","name","countries","tzMap","getTimezonesMap","timezones","current","allTimezones","all","buildTimezonesMap","Object","keys","reduce","result","tz","c","a","aliasTz","forEach","country","assign","_defineProperty","r","undefined","push","buildTimezone","timezone","_timezone$a","aliasOf","_objectSpread","utcOffset","u","dstOffset","Number","isInteger","d","utcOffsetStr","getOffsetStr","dstOffsetStr","deprecated","offset","hours","Math","floor","abs","min","sign","concat","getNumStr","input","num","prefix","totalTimezones","length","memoizedTimezones","getAllCountries","options","arguments","prev","getCountry","getAllTimezones","getTimezone","deliverTimezones","memoizeCountry","deliverCountry","memoizeTimezone","getCountriesForTimezone","tzName","values","map","getCountryForTimezone","_getCountriesForTimez","_getCountriesForTimez2","_slicedToArray","main","getTimezonesForCountry","countryId","tzs","_ref","key","_ref2","other","_objectWithoutProperties","_excluded"],"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"}