{"version":3,"file":"track.js","sourceRoot":"","sources":["../lib/track.js"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\n\nimport inherit from \"inherits\";\nimport { Facade } from \"./facade\";\nimport { Identify } from \"./identify\";\nimport isEmail from \"./is-email\";\nimport get from \"obj-case\";\n\n/**\n * Initialize a new `Track` facade with a `dictionary` of arguments.\n *\n * @param {Object} dictionary - The object to wrap.\n * @param {string} [dictionary.event] - The name of the event being tracked.\n * @param {string} [dictionary.userId] - The ID of the user being tracked.\n * @param {string} [dictionary.anonymousId] - The anonymous ID of the user.\n * @param {string} [dictionary.properties] - Properties of the track event.\n * @param {Object} opts - Options about what kind of Facade to create.\n *\n * @augments Facade\n */\nexport function Track(dictionary, opts) {\n  Facade.call(this, dictionary, opts);\n}\n\ninherit(Track, Facade);\n\nlet t = Track.prototype;\n\n/**\n * Return the type of facade this is. This will always return `\"track\"`.\n *\n * @return {string}\n */\nt.action = function () {\n  return \"track\";\n};\n\n/**\n * An alias for {@link Track#action}.\n *\n * @function\n * @return {string}\n */\nt.type = t.action;\n\n/**\n * Get the event name from `event`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @function\n * @return {string}\n */\nt.event = Facade.field(\"event\");\n\n/**\n * Get the event value, usually the monetary value, from `properties.value`.\n *\n * This *should* be a number, but may not be if the client isn't adhering to\n * the spec.\n *\n * @function\n * @return {number}\n */\nt.value = Facade.proxy(\"properties.value\");\n\n/**\n * Get the event cateogry from `properties.category`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @function\n * @return {string}\n */\nt.category = Facade.proxy(\"properties.category\");\n\n/**\n * Get the event ID from `properties.id`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @function\n * @return {string}\n */\nt.id = Facade.proxy(\"properties.id\");\n\n/**\n * Get the product ID from `properties.productId`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @return {string}\n */\nt.productId = function () {\n  return (\n    this.proxy(\"properties.product_id\") || this.proxy(\"properties.productId\")\n  );\n};\n\n/**\n * Get the promotion ID from `properties.promotionId`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @return {string}\n */\nt.promotionId = function () {\n  return (\n    this.proxy(\"properties.promotion_id\") ||\n    this.proxy(\"properties.promotionId\")\n  );\n};\n\n/**\n * Get the cart ID from `properties.cartId`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @return {string}\n */\nt.cartId = function () {\n  return this.proxy(\"properties.cart_id\") || this.proxy(\"properties.cartId\");\n};\n\n/**\n * Get the checkout ID from `properties.checkoutId`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @return {string}\n */\nt.checkoutId = function () {\n  return (\n    this.proxy(\"properties.checkout_id\") || this.proxy(\"properties.checkoutId\")\n  );\n};\n\n/**\n * Get the payment ID from `properties.paymentId`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @return {string}\n */\nt.paymentId = function () {\n  return (\n    this.proxy(\"properties.payment_id\") || this.proxy(\"properties.paymentId\")\n  );\n};\n\n/**\n * Get the coupon ID from `properties.couponId`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @return {string}\n */\nt.couponId = function () {\n  return (\n    this.proxy(\"properties.coupon_id\") || this.proxy(\"properties.couponId\")\n  );\n};\n\n/**\n * Get the wishlist ID from `properties.wishlistId`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @return {string}\n */\nt.wishlistId = function () {\n  return (\n    this.proxy(\"properties.wishlist_id\") || this.proxy(\"properties.wishlistId\")\n  );\n};\n\n/**\n * Get the review ID from `properties.reviewId`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @return {string}\n */\nt.reviewId = function () {\n  return (\n    this.proxy(\"properties.review_id\") || this.proxy(\"properties.reviewId\")\n  );\n};\n\n/**\n * Get the order ID from `properties.id` or `properties.orderId`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @return {string}\n */\nt.orderId = function () {\n  // doesn't follow above convention since this fallback order was how it used to be\n  return (\n    this.proxy(\"properties.id\") ||\n    this.proxy(\"properties.order_id\") ||\n    this.proxy(\"properties.orderId\")\n  );\n};\n\n/**\n * Get the SKU from `properties.sku`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @function\n * @return {string}\n */\nt.sku = Facade.proxy(\"properties.sku\");\n\n/**\n * Get the amount of tax for this purchase from `properties.tax`.\n *\n * This *should* be a number, but may not be if the client isn't adhering to\n * the spec.\n *\n * @function\n * @return {number}\n */\nt.tax = Facade.proxy(\"properties.tax\");\n\n/**\n * Get the name of this event from `properties.name`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @function\n * @return {string}\n */\nt.name = Facade.proxy(\"properties.name\");\n\n/**\n * Get the price of this purchase from `properties.price`.\n *\n * This *should* be a number, but may not be if the client isn't adhering to\n * the spec.\n *\n * @function\n * @return {number}\n */\nt.price = Facade.proxy(\"properties.price\");\n\n/**\n * Get the total for this purchase from `properties.total`.\n *\n * This *should* be a number, but may not be if the client isn't adhering to\n * the spec.\n *\n * @function\n * @return {number}\n */\nt.total = Facade.proxy(\"properties.total\");\n\n/**\n * Whether this is a repeat purchase from `properties.repeat`.\n *\n * This *should* be a boolean, but may not be if the client isn't adhering to\n * the spec.\n *\n * @function\n * @return {boolean}\n */\nt.repeat = Facade.proxy(\"properties.repeat\");\n\n/**\n * Get the coupon for this purchase from `properties.coupon`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @function\n * @return {string}\n */\nt.coupon = Facade.proxy(\"properties.coupon\");\n\n/**\n * Get the shipping for this purchase from `properties.shipping`.\n *\n * This *should* be a number, but may not be if the client isn't adhering to\n * the spec.\n *\n * @function\n * @return {number}\n */\nt.shipping = Facade.proxy(\"properties.shipping\");\n\n/**\n * Get the discount for this purchase from `properties.discount`.\n *\n * This *should* be a number, but may not be if the client isn't adhering to\n * the spec.\n *\n * @function\n * @return {number}\n */\nt.discount = Facade.proxy(\"properties.discount\");\n\n/**\n * Get the shipping method for this purchase from `properties.shippingMethod`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @return {string}\n */\nt.shippingMethod = function () {\n  return (\n    this.proxy(\"properties.shipping_method\") ||\n    this.proxy(\"properties.shippingMethod\")\n  );\n};\n\n/**\n * Get the payment method for this purchase from `properties.paymentMethod`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @return {string}\n */\nt.paymentMethod = function () {\n  return (\n    this.proxy(\"properties.payment_method\") ||\n    this.proxy(\"properties.paymentMethod\")\n  );\n};\n\n/**\n * Get a description for this event from `properties.description`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @function\n * @return {string}\n */\nt.description = Facade.proxy(\"properties.description\");\n\n/**\n * Get a plan, as in the plan the user is on, for this event from\n * `properties.plan`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @function\n * @return {string}\n */\nt.plan = Facade.proxy(\"properties.plan\");\n\n/**\n * Get the subtotal for this purchase from `properties.subtotal`.\n *\n * If `properties.subtotal` isn't available, then fall back to computing the\n * total from `properties.total` or `properties.revenue`, and then subtracting\n * tax, shipping, and discounts.\n *\n * If neither subtotal, total, nor revenue are available, then return 0.\n *\n * @return {number}\n */\nt.subtotal = function () {\n  let subtotal = get(this.properties(), \"subtotal\");\n  let total = this.total() || this.revenue();\n\n  if (subtotal) return subtotal;\n  if (!total) return 0;\n\n  if (this.total()) {\n    let n = this.tax();\n    if (n) total -= n;\n    n = this.shipping();\n    if (n) total -= n;\n    n = this.discount();\n    if (n) total += n;\n  }\n\n  return total;\n};\n\n/**\n * Get the products for this event from `properties.products` if it's an\n * array, falling back to an empty array.\n *\n * @return {Array}\n */\nt.products = function () {\n  let props = this.properties();\n  let products = get(props, \"products\");\n  if (Array.isArray(products)) {\n    return products.filter(item => item !== null)\n  }\n  return [];\n};\n\n/**\n * Get the quantity for this event from `properties.quantity`, falling back to\n * a quantity of one.\n *\n * @return {number}\n */\nt.quantity = function () {\n  let props = this.obj.properties || {};\n  return props.quantity || 1;\n};\n\n/**\n * Get the currency for this event from `properties.currency`, falling back to\n * \"USD\".\n *\n * @return {string}\n */\nt.currency = function () {\n  let props = this.obj.properties || {};\n  return props.currency || \"USD\";\n};\n\n/**\n * Get the referrer for this event from `context.referrer.url`,\n * `context.page.referrer`, or `properties.referrer`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @return {string}\n */\nt.referrer = function () {\n  // TODO re-examine whether this function is necessary\n  return (\n    this.proxy(\"context.referrer.url\") ||\n    this.proxy(\"context.page.referrer\") ||\n    this.proxy(\"properties.referrer\")\n  );\n};\n\n/**\n * Get the query for this event from `options.query`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @function\n * @return {string|object}\n */\nt.query = Facade.proxy(\"options.query\");\n\n/**\n * Get the page's properties. This is identical to how {@link Facade#traits}\n * works, except it looks at `properties.*` instead of `options.traits.*`.\n *\n * Properties are gotten from `properties`.\n *\n * The parameter `aliases` is meant to transform keys in `properties` into new\n * keys. Each alias like `{ \"xxx\": \"yyy\" }` will take whatever is at `xxx` in\n * the traits, and move it to `yyy`. If `xxx` is a method of this facade, it'll\n * be called as a function instead of treated as a key into the traits.\n *\n * @example\n * let obj = { properties: { foo: \"bar\" }, anonymousId: \"xxx\" }\n * let track = new Track(obj)\n *\n * track.traits() // { \"foo\": \"bar\" }\n * track.traits({ \"foo\": \"asdf\" }) // { \"asdf\": \"bar\" }\n * track.traits({ \"sessionId\": \"rofl\" }) // { \"rofl\": \"xxx\" }\n *\n * @param {Object} aliases - A mapping from keys to the new keys they should be\n * transformed to.\n * @return {Object}\n */\nt.properties = function (aliases) {\n  let ret = this.field(\"properties\") || {};\n  aliases = aliases || {};\n\n  for (const alias in aliases) {\n    if (Object.prototype.hasOwnProperty.call(aliases, alias)) {\n      const value = this[alias] == null\n        ? this.proxy(\"properties.\" + alias)\n        : this[alias]();\n      if (value == null) continue;\n      ret[aliases[alias]] = value;\n      delete ret[alias];\n    }\n  }\n\n  return ret;\n};\n\n/**\n * Get the username of the user for this event from `traits.username`,\n * `properties.username`, `userId`, or `anonymousId`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @return {string|undefined}\n */\nt.username = function () {\n  return (\n    this.proxy(\"traits.username\") ||\n    this.proxy(\"properties.username\") ||\n    this.userId() ||\n    this.sessionId()\n  );\n};\n\n/**\n * Get the email of the user for this event from `trais.email`,\n * `properties.email`, or `options.traits.email`, falling back to `userId` if\n * it looks like a valid email.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @return {string|undefined}\n */\nt.email = function () {\n  let email =\n    this.proxy(\"traits.email\") ||\n    this.proxy(\"properties.email\") ||\n    this.proxy(\"options.traits.email\");\n  if (email) return email;\n\n  let userId = this.userId();\n  if (isEmail(userId)) return userId;\n};\n\n/**\n * Get the revenue for this event.\n *\n * If this is an \"Order Completed\" event, this will be the `properties.total`\n * falling back to the `properties.revenue`. For all other events, this is\n * simply taken from `properties.revenue`.\n *\n * If there are dollar signs in these properties, they will be removed. The\n * result will be parsed into a number.\n *\n * @return {number}\n */\nt.revenue = function () {\n  let revenue = this.proxy(\"properties.revenue\");\n  let event = this.event();\n  let orderCompletedRegExp = /^[ _]?completed[ _]?order[ _]?|^[ _]?order[ _]?completed[ _]?$/i;\n\n  // it's always revenue, unless it's called during an order completion.\n  if (!revenue && event && event.match(orderCompletedRegExp)) {\n    revenue = this.proxy(\"properties.total\");\n  }\n\n  return currency(revenue);\n};\n\n/**\n * Get the revenue for this event in \"cents\" -- in other words, multiply the\n * {@link Track#revenue} by 100, or return 0 if there isn't a numerical revenue\n * for this event.\n *\n * @return {number}\n */\nt.cents = function () {\n  let revenue = this.revenue();\n  return typeof revenue !== \"number\" ? this.value() || 0 : revenue * 100;\n};\n\n/**\n * Convert this event into an {@link Identify} facade.\n *\n * This works by taking this event's underlying object and creating an Identify\n * from it. This event's traits, taken from `options.traits`, will be used as\n * the Identify's traits.\n *\n * @return {Identify}\n */\nt.identify = function () {\n  // TODO: remove me.\n  let json = this.json();\n  json.traits = this.traits();\n  return new Identify(json, this.opts);\n};\n\n/**\n * Get float from currency value.\n *\n * @ignore\n * @param {*} val\n * @return {number}\n */\nfunction currency(val) {\n  if (!val) return;\n  if (typeof val === \"number\") {\n    return val;\n  }\n  if (typeof val !== \"string\") {\n    return;\n  }\n\n  val = val.replace(/\\$/g, \"\");\n  val = parseFloat(val);\n\n  if (!isNaN(val)) {\n    return val;\n  }\n}\n"]}