{"version":3,"file":"delete.js","sourceRoot":"","sources":["../lib/delete.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;AAEb,sDAA+B;AAC/B,mCAAkC;AAalC,SAAgB,MAAM,CAAC,UAAU,EAAE,IAAI;IACrC,eAAM,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;AACtC,CAAC;AAFD,wBAEC;AAED,kBAAO,CAAC,MAAM,EAAE,eAAM,CAAC,CAAC;AAOxB,MAAM,CAAC,SAAS,CAAC,IAAI,GAAG;IACtB,OAAO,QAAQ,CAAC;AAClB,CAAC,CAAC","sourcesContent":["\"use strict\";\n\nimport inherit from \"inherits\";\nimport { Facade } from \"./facade\";\n\n/**\n * Initialize a new `Delete` facade with a `dictionary` of arguments.\n *\n * @param {Object} dictionary - The object to wrap.\n * @param {string} [dictionary.category] - The delete category.\n * @param {string} [dictionary.name] - The delete name.\n * @param {string} [dictionary.properties] - The delete properties.\n * @param {Object} opts - Options about what kind of Facade to create.\n *\n * @augments Facade\n */\nexport function Delete(dictionary, opts) {\n  Facade.call(this, dictionary, opts);\n}\n\ninherit(Delete, Facade);\n\n/**\n * Return the type of facade this is. This will always return `\"delete\"`.\n *\n * @return {string}\n */\nDelete.prototype.type = function () {\n  return \"delete\";\n};\n"]}