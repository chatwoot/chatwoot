function S(e,t){e.length<t.length&&([e,t]=[t,e]);let r=e.length,i=t.length;if(r===0||i===0)return 0;let o=Math.floor(r/2)-1,s=Array(i).fill(!1),u=Array(r).fill(""),h=0;for(let n=0;n<r;n++){let c=e[n];for(let a=0;a<i;a++){let T=t[a];if(a<=n+o&&a+o>=1&&c===T&&!s[a]){s[a]=!0,u[h++]=c;break}}}if(!h)return 0;let m=0;for(let n=0,c=0;c<i;c++)s[c]&&(t[c]!==u[n]&&m++,n++);let l=h,g=(l/r+l/i+(l-m/2)/l)/3,p=0,f=Math.min(4,i);for(let n=0;n<f;n++)e[n]===t[n]&&p++;return g+p*.1*(1-g)}function b(e,t){let r=0,i=0;if(t&&e.length!==t.length)throw new Error("The number of values must be equal to the number of weights");for(let o=0;o<e.length;o++){let s=t?t[o]:1;r+=e[o]*s,i+=s}return r/i}function d(e){return Math.max(0,Math.min(1,e))}function y(e){return e.split(/\s+/).filter((t,r,i)=>t&&i.indexOf(t)===r)}var A={CONTAINS_MATCH:1.2,FIRST_SIMILARITY:1.1,STARTS_WITH:1.05};function j(e,t,r,i){if(!t||typeof t!="string")return e;let o=[],s=i?.threshold??.8,u=t.trim().toLowerCase(),h=y(u);return e.forEach(m=>{let l=[],g=[];r.forEach(f=>{let n,c=1;typeof f=="string"?n=f:(n=f.name,c=f.weight),g.push(c);let a=m[n]?.trim().toLowerCase();if(a){let T=I(a,h);l.push(T)}else l.push(0)});let p=b(l,g);p>=s&&o.push({object:m,similarity:p})}),o.sort((m,l)=>l.similarity-m.similarity),o.map(m=>m.object)}function I(e,t){let r=y(e),i=t.map(o=>{let s=r.map(h=>x(h,o)),u=Math.max(...s);return u===s[0]?u*A.FIRST_SIMILARITY:d(u)});return b(i)}function x(e,t){let r=S(e,t);return e.includes(t)?r*A.CONTAINS_MATCH:r}export{j as picoSearch};
//# sourceMappingURL=index.mjs.map