{"version":3,"file":"ninja-header.js","sourceRoot":"","sources":["../src/ninja-header.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAiB,MAAM,KAAK,CAAC;AAC1D,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAC1D,OAAO,EAAC,GAAG,EAAE,SAAS,EAAC,MAAM,uBAAuB,CAAC;AAGrD,IAAa,WAAW,GAAxB,MAAa,WAAY,SAAQ,UAAU;IAA3C;;QAqDE,gBAAW,GAAG,EAAE,CAAC;QAGjB,oBAAe,GAAG,KAAK,CAAC;QAGxB,mBAAc,GAAG,MAAM,CAAC;QAGxB,gBAAW,GAAa,EAAE,CAAC;QAEnB,cAAS,GAAG,SAAS,EAAoB,CAAC;IAuFpD,CAAC;IArFU,MAAM;QACb,IAAI,WAAW,GAA2B,EAAE,CAAC;QAC7C,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YACzB,MAAM,aAAa,GAAG,EAAE,CAAC;YACzB,KAAK,MAAM,UAAU,IAAI,IAAI,CAAC,WAAW,EAAE;gBACzC,aAAa,CAAC,IAAI,CAChB,IAAI,CAAA;;qBAEO,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;;;cAG1C,UAAU;oBACJ,CACX,CAAC;aACH;YACD,WAAW,GAAG,IAAI,CAAA;;;mBAGL,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE;;;YAGhC,IAAI,CAAC,cAAc;;UAErB,aAAa;aACV,CAAC;SACT;QAED,OAAO,IAAI,CAAA;QACP,WAAW;;;;;;;;oBAQC,IAAI,CAAC,YAAY;YACzB,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;yBACN,IAAI,CAAC,WAAW;;;;KAIpC,CAAC;IACJ,CAAC;IAED,SAAS,CAAC,KAAa;QACrB,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACxB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;SACpC;IACH,CAAC;IAED,WAAW;QACT,qBAAqB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,KAAM,CAAC,KAAK,EAAE,CAAC,CAAC;IAC7D,CAAC;IAEO,YAAY,CAAC,KAAY;QAC/B,MAAM,KAAK,GAAG,KAAK,CAAC,MAA0B,CAAC;QAC/C,IAAI,CAAC,aAAa,CAChB,IAAI,WAAW,CAAC,QAAQ,EAAE;YACxB,MAAM,EAAE,EAAC,MAAM,EAAE,KAAK,CAAC,KAAK,EAAC;YAC7B,OAAO,EAAE,KAAK;YACd,QAAQ,EAAE,KAAK;SAChB,CAAC,CACH,CAAC;IACJ,CAAC;IAEO,YAAY,CAAC,UAAmB;QACtC,IAAI,CAAC,aAAa,CAChB,IAAI,WAAW,CAAC,WAAW,EAAE;YAC3B,MAAM,EAAE,EAAC,MAAM,EAAE,UAAU,EAAC;YAC5B,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,IAAI;SACf,CAAC,CACH,CAAC;IACJ,CAAC;IAEQ,YAAY;QACnB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,aAAa,CAChB,IAAI,WAAW,CAAC,OAAO,EAAE,EAAC,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC,CAC1D,CAAC;IACJ,CAAC;CACF,CAAA;AAtJiB,kBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAiD1B,CAAA;AAGF;IADC,QAAQ,EAAE;gDACM;AAGjB;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC;oDACF;AAGxB;IADC,QAAQ,EAAE;mDACa;AAGxB;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,KAAK,EAAC,CAAC;gDACG;AA9DhB,WAAW;IADvB,aAAa,CAAC,cAAc,CAAC;GACjB,WAAW,CAuJvB;SAvJY,WAAW","sourcesContent":["import {LitElement, html, css, TemplateResult} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\nimport {ref, createRef} from 'lit/directives/ref.js';\n\n@customElement('ninja-header')\nexport class NinjaHeader extends LitElement {\n  static override styles = css`\n    :host {\n      flex: 1;\n      position: relative;\n    }\n    .search {\n      padding: 1.25em;\n      flex-grow: 1;\n      flex-shrink: 0;\n      margin: 0px;\n      border: none;\n      appearance: none;\n      font-size: 1.125em;\n      background: transparent;\n      caret-color: var(--ninja-accent-color);\n      color: var(--ninja-text-color);\n      outline: none;\n      font-family: var(--ninja-font-family);\n    }\n    .search::placeholder {\n      color: var(--ninja-placeholder-color);\n    }\n    .breadcrumb-list {\n      padding: 1em 4em 0 1em;\n      display: flex;\n      flex-direction: row;\n      align-items: stretch;\n      justify-content: flex-start;\n      flex: initial;\n    }\n\n    .breadcrumb {\n      background: var(--ninja-secondary-background-color);\n      text-align: center;\n      line-height: 1.2em;\n      border-radius: var(--ninja-key-border-radius);\n      border: 0;\n      cursor: pointer;\n      padding: 0.1em 0.5em;\n      color: var(--ninja-secondary-text-color);\n      margin-right: 0.5em;\n      outline: none;\n      font-family: var(--ninja-font-family);\n    }\n\n    .search-wrapper {\n      display: flex;\n      border-bottom: var(--ninja-separate-border);\n    }\n  `;\n\n  @property()\n  placeholder = '';\n\n  @property({type: Boolean})\n  hideBreadcrumbs = false;\n\n  @property()\n  breadcrumbHome = 'Home';\n\n  @property({type: Array})\n  breadcrumbs: string[] = [];\n\n  private _inputRef = createRef<HTMLInputElement>();\n\n  override render() {\n    let breadcrumbs: TemplateResult<1> | '' = '';\n    if (!this.hideBreadcrumbs) {\n      const itemTemplates = [];\n      for (const breadcrumb of this.breadcrumbs) {\n        itemTemplates.push(\n          html`<button\n            tabindex=\"-1\"\n            @click=${() => this.selectParent(breadcrumb)}\n            class=\"breadcrumb\"\n          >\n            ${breadcrumb}\n          </button>`\n        );\n      }\n      breadcrumbs = html`<div class=\"breadcrumb-list\">\n        <button\n          tabindex=\"-1\"\n          @click=${() => this.selectParent()}\n          class=\"breadcrumb\"\n        >\n          ${this.breadcrumbHome}\n        </button>\n        ${itemTemplates}\n      </div>`;\n    }\n\n    return html`\n      ${breadcrumbs}\n      <div part=\"ninja-input-wrapper\" class=\"search-wrapper\">\n        <input\n          part=\"ninja-input\"\n          type=\"text\"\n          id=\"search\"\n          spellcheck=\"false\"\n          autocomplete=\"off\"\n          @input=\"${this._handleInput}\"\n          ${ref(this._inputRef)}\n          placeholder=\"${this.placeholder}\"\n          class=\"search\"\n        />\n      </div>\n    `;\n  }\n\n  setSearch(value: string) {\n    if (this._inputRef.value) {\n      this._inputRef.value.value = value;\n    }\n  }\n\n  focusSearch() {\n    requestAnimationFrame(() => this._inputRef.value!.focus());\n  }\n\n  private _handleInput(event: Event) {\n    const input = event.target as HTMLInputElement;\n    this.dispatchEvent(\n      new CustomEvent('change', {\n        detail: {search: input.value},\n        bubbles: false,\n        composed: false,\n      })\n    );\n  }\n\n  private selectParent(breadcrumb?: string) {\n    this.dispatchEvent(\n      new CustomEvent('setParent', {\n        detail: {parent: breadcrumb},\n        bubbles: true,\n        composed: true,\n      })\n    );\n  }\n\n  override firstUpdated() {\n    this.focusSearch();\n  }\n\n  _close() {\n    this.dispatchEvent(\n      new CustomEvent('close', {bubbles: true, composed: true})\n    );\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'ninja-header': NinjaHeader;\n  }\n}\n"]}