{"version":3,"file":"tracing.js","sources":["../../src/tracing.ts"],"sourcesContent":["import { SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, getActiveSpan, startInactiveSpan } from '@sentry/browser';\nimport type { Span } from '@sentry/types';\nimport { logger, timestampInSeconds } from '@sentry/utils';\n\nimport { DEFAULT_HOOKS } from './constants';\nimport { DEBUG_BUILD } from './debug-build';\nimport type { Hook, Operation, TracingOptions, ViewModel, Vue } from './types';\nimport { formatComponentName } from './vendor/components';\n\nconst VUE_OP = 'ui.vue';\n\ntype Mixins = Parameters<Vue['mixin']>[0];\n\ninterface VueSentry extends ViewModel {\n  readonly $root: VueSentry;\n  $_sentrySpans?: {\n    [key: string]: Span | undefined;\n  };\n  $_sentryRootSpan?: Span;\n  $_sentryRootSpanTimer?: ReturnType<typeof setTimeout>;\n}\n\n// Mappings from operation to corresponding lifecycle hook.\nconst HOOKS: { [key in Operation]: Hook[] } = {\n  activate: ['activated', 'deactivated'],\n  create: ['beforeCreate', 'created'],\n  // Vue 3\n  unmount: ['beforeUnmount', 'unmounted'],\n  // Vue 2\n  destroy: ['beforeDestroy', 'destroyed'],\n  mount: ['beforeMount', 'mounted'],\n  update: ['beforeUpdate', 'updated'],\n};\n\n/** Finish top-level span and activity with a debounce configured using `timeout` option */\nfunction finishRootSpan(vm: VueSentry, timestamp: number, timeout: number): void {\n  if (vm.$_sentryRootSpanTimer) {\n    clearTimeout(vm.$_sentryRootSpanTimer);\n  }\n\n  vm.$_sentryRootSpanTimer = setTimeout(() => {\n    if (vm.$root && vm.$root.$_sentryRootSpan) {\n      vm.$root.$_sentryRootSpan.end(timestamp);\n      vm.$root.$_sentryRootSpan = undefined;\n    }\n  }, timeout);\n}\n\n/** Find if the current component exists in the provided `TracingOptions.trackComponents` array option. */\nexport function findTrackComponent(trackComponents: string[], formattedName: string): boolean {\n  function extractComponentName(name: string): string {\n    return name.replace(/^<([^\\s]*)>(?: at [^\\s]*)?$/, '$1');\n  }\n\n  const isMatched = trackComponents.some(compo => {\n    return extractComponentName(formattedName) === extractComponentName(compo);\n  });\n\n  return isMatched;\n}\n\nexport const createTracingMixins = (options: TracingOptions): Mixins => {\n  const hooks = (options.hooks || [])\n    .concat(DEFAULT_HOOKS)\n    // Removing potential duplicates\n    .filter((value, index, self) => self.indexOf(value) === index);\n\n  const mixins: Mixins = {};\n\n  for (const operation of hooks) {\n    // Retrieve corresponding hooks from Vue lifecycle.\n    // eg. mount => ['beforeMount', 'mounted']\n    const internalHooks = HOOKS[operation];\n    if (!internalHooks) {\n      DEBUG_BUILD && logger.warn(`Unknown hook: ${operation}`);\n      continue;\n    }\n\n    for (const internalHook of internalHooks) {\n      mixins[internalHook] = function (this: VueSentry) {\n        const isRoot = this.$root === this;\n\n        if (isRoot) {\n          const activeSpan = getActiveSpan();\n          if (activeSpan) {\n            this.$_sentryRootSpan =\n              this.$_sentryRootSpan ||\n              startInactiveSpan({\n                name: 'Application Render',\n                op: `${VUE_OP}.render`,\n                attributes: {\n                  [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.vue',\n                },\n              });\n          }\n        }\n\n        // Skip components that we don't want to track to minimize the noise and give a more granular control to the user\n        const name = formatComponentName(this, false);\n\n        const shouldTrack = Array.isArray(options.trackComponents)\n          ? findTrackComponent(options.trackComponents, name)\n          : options.trackComponents;\n\n        // We always want to track root component\n        if (!isRoot && !shouldTrack) {\n          return;\n        }\n\n        this.$_sentrySpans = this.$_sentrySpans || {};\n\n        // Start a new span if current hook is a 'before' hook.\n        // Otherwise, retrieve the current span and finish it.\n        if (internalHook == internalHooks[0]) {\n          const activeSpan = (this.$root && this.$root.$_sentryRootSpan) || getActiveSpan();\n          if (activeSpan) {\n            // Cancel old span for this hook operation in case it didn't get cleaned up. We're not actually sure if it\n            // will ever be the case that cleanup hooks re not called, but we had users report that spans didn't get\n            // finished so we finish the span before starting a new one, just to be sure.\n            const oldSpan = this.$_sentrySpans[operation];\n            if (oldSpan) {\n              oldSpan.end();\n            }\n\n            this.$_sentrySpans[operation] = startInactiveSpan({\n              name: `Vue ${name}`,\n              op: `${VUE_OP}.${operation}`,\n              attributes: {\n                [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.vue',\n              },\n              // UI spans should only be created if there is an active root span (transaction)\n              onlyIfParent: true,\n            });\n          }\n        } else {\n          // The span should already be added via the first handler call (in the 'before' hook)\n          const span = this.$_sentrySpans[operation];\n          // The before hook did not start the tracking span, so the span was not added.\n          // This is probably because it happened before there is an active transaction\n          if (!span) return;\n          span.end();\n\n          finishRootSpan(this, timestampInSeconds(), options.timeout);\n        }\n      };\n    }\n  }\n\n  return mixins;\n};\n"],"names":[],"mappings":"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"}