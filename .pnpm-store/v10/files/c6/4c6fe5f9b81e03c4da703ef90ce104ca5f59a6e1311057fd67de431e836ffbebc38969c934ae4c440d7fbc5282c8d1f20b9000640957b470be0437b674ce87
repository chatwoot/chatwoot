{"version":3,"file":"getFID.js","sources":["../../../../src/metrics/web-vitals/getFID.ts"],"sourcesContent":["/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bindReporter } from './lib/bindReporter';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport { runOnce } from './lib/runOnce';\nimport { whenActivated } from './lib/whenActivated';\nimport type { FIDMetric, FIDReportCallback, MetricRatingThresholds, ReportOpts } from './types';\n\n/** Thresholds for FID. See https://web.dev/articles/fid#what_is_a_good_fid_score */\nexport const FIDThresholds: MetricRatingThresholds = [100, 300];\n\n/**\n * Calculates the [FID](https://web.dev/articles/fid) value for the current page and\n * calls the `callback` function once the value is ready, along with the\n * relevant `first-input` performance entry used to determine the value. The\n * reported value is a `DOMHighResTimeStamp`.\n *\n * _**Important:** since FID is only reported after the user interacts with the\n * page, it's possible that it will not be reported for some page loads._\n */\nexport const onFID = (onReport: FIDReportCallback, opts: ReportOpts = {}) => {\n  whenActivated(() => {\n    const visibilityWatcher = getVisibilityWatcher();\n    const metric = initMetric('FID');\n    // eslint-disable-next-line prefer-const\n    let report: ReturnType<typeof bindReporter>;\n\n    const handleEntry = (entry: PerformanceEventTiming): void => {\n      // Only report if the page wasn't hidden prior to the first input.\n      if (entry.startTime < visibilityWatcher.firstHiddenTime) {\n        metric.value = entry.processingStart - entry.startTime;\n        metric.entries.push(entry);\n        report(true);\n      }\n    };\n\n    const handleEntries = (entries: FIDMetric['entries']) => {\n      (entries as PerformanceEventTiming[]).forEach(handleEntry);\n    };\n\n    const po = observe('first-input', handleEntries);\n    report = bindReporter(onReport, metric, FIDThresholds, opts.reportAllChanges);\n\n    if (po) {\n      onHidden(\n        runOnce(() => {\n          handleEntries(po.takeRecords() as FIDMetric['entries']);\n          po.disconnect();\n        }),\n      );\n    }\n  });\n};\n"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAUA;AACO,MAAM,aAAa,GAA2B,CAAC,GAAG,EAAE,GAAG,EAAC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa,MAAA,KAAA,GAAQ,CAAC,QAAQ,EAAqB,IAAI,GAAe,EAAE,KAAK;AAC7E,EAAE,aAAa,CAAC,MAAM;AACtB,IAAI,MAAM,iBAAA,GAAoB,oBAAoB,EAAE,CAAA;AACpD,IAAI,MAAM,MAAO,GAAE,UAAU,CAAC,KAAK,CAAC,CAAA;AACpC;AACA,IAAI,IAAI,MAAM,CAAA;AACd;AACA,IAAI,MAAM,WAAA,GAAc,CAAC,KAAK,KAAmC;AACjE;AACA,MAAM,IAAI,KAAK,CAAC,YAAY,iBAAiB,CAAC,eAAe,EAAE;AAC/D,QAAQ,MAAM,CAAC,KAAA,GAAQ,KAAK,CAAC,eAAgB,GAAE,KAAK,CAAC,SAAS,CAAA;AAC9D,QAAQ,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;AAClC,QAAQ,MAAM,CAAC,IAAI,CAAC,CAAA;AACpB,OAAM;AACN,KAAK,CAAA;AACL;AACA,IAAI,MAAM,aAAc,GAAE,CAAC,OAAO,KAA2B;AAC7D,MAAM,CAAC,OAAQ,GAA6B,OAAO,CAAC,WAAW,CAAC,CAAA;AAChE,KAAK,CAAA;AACL;AACA,IAAI,MAAM,KAAK,OAAO,CAAC,aAAa,EAAE,aAAa,CAAC,CAAA;AACpD,IAAI,MAAO,GAAE,YAAY,CAAC,QAAQ,EAAE,MAAM,EAAE,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAA;AACjF;AACA,IAAI,IAAI,EAAE,EAAE;AACZ,MAAM,QAAQ;AACd,QAAQ,OAAO,CAAC,MAAM;AACtB,UAAU,aAAa,CAAC,EAAE,CAAC,WAAW,IAA2B,CAAA;AACjE,UAAU,EAAE,CAAC,UAAU,EAAE,CAAA;AACzB,SAAS,CAAC;AACV,OAAO,CAAA;AACP,KAAI;AACJ,GAAG,CAAC,CAAA;AACJ;;;;"}