{"version":3,"file":"xhr.js","sources":["../../../src/instrument/xhr.ts"],"sourcesContent":["import type { HandlerDataXhr, SentryWrappedXMLHttpRequest } from '@sentry/types';\n\nimport { addHandler, isString, maybeInstrument, timestampInSeconds, triggerHandlers } from '@sentry/utils';\nimport { WINDOW } from '../types';\n\nexport const SENTRY_XHR_DATA_KEY = '__sentry_xhr_v3__';\n\ntype WindowWithXhr = Window & { XMLHttpRequest?: typeof XMLHttpRequest };\n\n/**\n * Add an instrumentation handler for when an XHR request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addXhrInstrumentationHandler(handler: (data: HandlerDataXhr) => void): void {\n  const type = 'xhr';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentXHR);\n}\n\n/** Exported only for tests. */\nexport function instrumentXHR(): void {\n  if (!(WINDOW as WindowWithXhr).XMLHttpRequest) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  xhrproto.open = new Proxy(xhrproto.open, {\n    apply(originalOpen, xhrOpenThisArg: XMLHttpRequest & SentryWrappedXMLHttpRequest, xhrOpenArgArray) {\n      const startTimestamp = timestampInSeconds() * 1000;\n\n      // open() should always be called with two or more arguments\n      // But to be on the safe side, we actually validate this and bail out if we don't have a method & url\n      const method = isString(xhrOpenArgArray[0]) ? xhrOpenArgArray[0].toUpperCase() : undefined;\n      const url = parseUrl(xhrOpenArgArray[1]);\n\n      if (!method || !url) {\n        return originalOpen.apply(xhrOpenThisArg, xhrOpenArgArray);\n      }\n\n      xhrOpenThisArg[SENTRY_XHR_DATA_KEY] = {\n        method,\n        url,\n        request_headers: {},\n      };\n\n      // if Sentry key appears in URL, don't capture it as a request\n      if (method === 'POST' && url.match(/sentry_key/)) {\n        xhrOpenThisArg.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler: () => void = () => {\n        // For whatever reason, this is not the same instance here as from the outer method\n        const xhrInfo = xhrOpenThisArg[SENTRY_XHR_DATA_KEY];\n\n        if (!xhrInfo) {\n          return;\n        }\n\n        if (xhrOpenThisArg.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = xhrOpenThisArg.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          const handlerData: HandlerDataXhr = {\n            endTimestamp: timestampInSeconds() * 1000,\n            startTimestamp,\n            xhr: xhrOpenThisArg,\n          };\n          triggerHandlers('xhr', handlerData);\n        }\n      };\n\n      if ('onreadystatechange' in xhrOpenThisArg && typeof xhrOpenThisArg.onreadystatechange === 'function') {\n        xhrOpenThisArg.onreadystatechange = new Proxy(xhrOpenThisArg.onreadystatechange, {\n          apply(originalOnreadystatechange, onreadystatechangeThisArg, onreadystatechangeArgArray: unknown[]) {\n            onreadystatechangeHandler();\n            return originalOnreadystatechange.apply(onreadystatechangeThisArg, onreadystatechangeArgArray);\n          },\n        });\n      } else {\n        xhrOpenThisArg.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      // Intercepting `setRequestHeader` to access the request headers of XHR instance.\n      // This will only work for user/library defined headers, not for the default/browser-assigned headers.\n      // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.\n      xhrOpenThisArg.setRequestHeader = new Proxy(xhrOpenThisArg.setRequestHeader, {\n        apply(\n          originalSetRequestHeader,\n          setRequestHeaderThisArg: SentryWrappedXMLHttpRequest,\n          setRequestHeaderArgArray: unknown[],\n        ) {\n          const [header, value] = setRequestHeaderArgArray;\n\n          const xhrInfo = setRequestHeaderThisArg[SENTRY_XHR_DATA_KEY];\n\n          if (xhrInfo && isString(header) && isString(value)) {\n            xhrInfo.request_headers[header.toLowerCase()] = value;\n          }\n\n          return originalSetRequestHeader.apply(setRequestHeaderThisArg, setRequestHeaderArgArray);\n        },\n      });\n\n      return originalOpen.apply(xhrOpenThisArg, xhrOpenArgArray);\n    },\n  });\n\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  xhrproto.send = new Proxy(xhrproto.send, {\n    apply(originalSend, sendThisArg: XMLHttpRequest & SentryWrappedXMLHttpRequest, sendArgArray: unknown[]) {\n      const sentryXhrData = sendThisArg[SENTRY_XHR_DATA_KEY];\n\n      if (!sentryXhrData) {\n        return originalSend.apply(sendThisArg, sendArgArray);\n      }\n\n      if (sendArgArray[0] !== undefined) {\n        sentryXhrData.body = sendArgArray[0];\n      }\n\n      const handlerData: HandlerDataXhr = {\n        startTimestamp: timestampInSeconds() * 1000,\n        xhr: sendThisArg,\n      };\n      triggerHandlers('xhr', handlerData);\n\n      return originalSend.apply(sendThisArg, sendArgArray);\n    },\n  });\n}\n\nfunction parseUrl(url: string | unknown): string | undefined {\n  if (isString(url)) {\n    return url;\n  }\n\n  try {\n    // url can be a string or URL\n    // but since URL is not available in IE11, we do not check for it,\n    // but simply assume it is an URL and return `toString()` from it (which returns the full URL)\n    // If that fails, we just return undefined\n    return (url as URL).toString();\n  } catch {} // eslint-disable-line no-empty\n\n  return undefined;\n}\n"],"names":["addHandler","maybeInstrument","WINDOW","timestampInSeconds","isString","triggerHandlers"],"mappings":"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"}