// Generated by dts-bundle-generator v6.2.0

import { Locale as FormatLocale } from 'date-format-parse/es/locale';
import { Assign, DeepPartial } from 'utility-types';
import { App, InputHTMLAttributes, PropType, StyleValue } from 'vue';

export interface Locale {
	formatLocale: FormatLocale;
	days?: string[];
	months?: string[];
	yearFormat: string;
	monthFormat: string;
	monthBeforeYear: boolean;
}
export declare type ClassValue = string | Record<string, boolean> | Array<ClassValue>;
export declare type DateValue = string | number | Date | null | undefined | Array<DateValue>;
export declare type PickerType = "date" | "year" | "month" | "week" | "datetime" | "time";
export declare type Valuetype = "date" | "format" | "timestamp" | string;
export declare type PanelType = "date" | "month" | "year";
export interface Formatter {
	stringify?: (v: Date, fmt: string) => string;
	parse?: (v: string, fmt: string) => Date;
	getWeek?: (v: Date) => number;
}
declare function locale(name?: string, object?: Locale | null, isLocal?: boolean): Locale;
export declare type NonUndefinedable<T> = T extends undefined ? never : T;
export declare type DefinePropsToOptions<T> = {
	[K in keyof T]-?: Record<string, never> extends Pick<T, K> ? {
		type: PropType<NonUndefinedable<T[K]>>;
	} : {
		type: PropType<T[K]>;
		required: true;
	};
};
export interface PickerInputBaseProps {
	placeholder?: string;
	editable?: boolean;
	disabled?: boolean;
	clearable?: boolean;
	inputClass?: ClassValue;
	inputAttr?: InputHTMLAttributes;
	range?: boolean;
	multiple?: boolean;
	separator?: string;
	renderInputText?: (v: Date | Date[]) => string;
	onInputError?: (text: string) => void;
	onClear?: () => void;
}
export interface PickerBaseProps {
	type?: PickerType;
	format?: string;
	value?: DateValue;
	valueType?: Valuetype;
	formatter?: Formatter;
	lang?: string | DeepPartial<Locale>;
	prefixClass?: string;
	appendToBody?: boolean;
	open?: boolean;
	popupClass?: ClassValue;
	popupStyle?: StyleValue;
	confirm?: boolean;
	confirmText?: string;
	shortcuts?: Array<{
		text: string;
		onClick: () => Date | Date[];
	}>;
	disabledDate?: (v: Date) => boolean;
	disabledTime?: (v: Date) => boolean;
	onClose?: () => void;
	onOpen?: () => void;
	onConfirm?: (v: any) => void;
	onChange?: (v: any, type?: string) => void;
	["onUpdate:open"]?: (open: boolean) => void;
	["onUpdate:value"]?: (v: any) => void;
}
export declare type PickerProps = PickerBaseProps & PickerInputBaseProps;
export interface CalendarProps {
	type?: PickerType;
	value?: Date | Date[];
	defaultValue?: Date;
	defaultPanel?: PickerType;
	disabledDate?: (value: Date, innerValue?: Date[]) => boolean;
	getClasses?: (value: Date, innerValue: Date[], classes: string) => string[] | string;
	calendar?: Date;
	multiple?: boolean;
	partialUpdate?: boolean;
	showWeekNumber?: boolean;
	titleFormat?: string;
	getYearPanel?: () => number[][];
	onDateMouseEnter?: (value: Date) => void;
	onDateMouseLeave?: (value: Date) => void;
	onCalendarChange?: (value: Date) => void;
	onPanelChange?: (value: PanelType, oldValue: PanelType) => void;
	onPick?: (value: Date) => void;
	["onUpdate:value"]?: (v: any, type: string) => void;
}
export interface TimePickerFormat {
	start?: string;
	end?: string;
	step?: string;
	format?: string;
}
export declare type TimePickerFunction = () => Array<{
	value: Date;
	text: string;
}>;
export declare type TimePickerOptions = TimePickerFormat | TimePickerFunction;
export interface TimePanelProps {
	value?: Date;
	defaultValue?: Date;
	format?: string;
	timeTitleFormat?: string;
	showTimeHeader?: boolean;
	disabledTime?: (v: Date, i?: number) => boolean;
	timePickerOptions?: TimePickerOptions;
	hourOptions?: number[];
	minuteOptions?: number[];
	secondOptions?: number[];
	hourStep?: number;
	minuteStep?: number;
	secondStep?: number;
	showHour?: boolean;
	showMinute?: boolean;
	showSecond?: boolean;
	use12h?: boolean;
	scrollDuration?: number;
	onClickTitle?: (payload: MouseEvent) => void;
	["onUpdate:value"]?: (value: Date, type: string, index?: number) => void;
}
export interface DateTimeBaseProps {
	showTimePanel?: boolean;
	onShowTimePanelChange?: (v: boolean) => void;
}
export declare type DateTimeProps = DateTimeBaseProps & CalendarProps & TimePanelProps;
export interface TimeRangeProps extends Omit<TimePanelProps, "onUpdate:value" | "value" | "defaultValue"> {
	value?: Date[];
	defaultValue?: Date | Date[];
	["onUpdate:value"]?: (value: Date[], type: string, index?: number) => void;
}
export declare type DateRange = [
	Date,
	Date
];
export interface CalendarRangeProps extends Omit<CalendarProps, "value" | "defaultValue" | "onUpdate:value" | "calendar" | "onCalendarChange"> {
	value?: Date[];
	defaultValue?: Date | Date[];
	calendar?: Date[];
	onCalendarChange?: (value: DateRange, index?: number) => void;
	["onUpdate:value"]?: (v: Date[], type: string) => void;
}
export declare type DateTimeRangeProps = DateTimeBaseProps & TimeRangeProps & CalendarRangeProps;
export declare type DatePickerProps = Assign<DateTimeProps, PickerProps>;
export declare type DatePickerRangeProps = {
	range: true;
} & Assign<DateTimeRangeProps, PickerProps>;
export declare type DatePickerComponentProps = DatePickerProps | DatePickerRangeProps;
declare const _default: import("vue").FunctionalComponent<DatePickerComponentProps, any> & {
	locale: typeof locale;
	install: (app: App<any>) => void;
} & {
	Calendar: import("vue").DefineComponent<DefinePropsToOptions<{
		type?: PickerType | undefined;
		value?: Date | Date[] | undefined;
		defaultValue?: Date | undefined;
		defaultPanel?: PickerType | undefined;
		disabledDate?: ((value: Date, innerValue?: Date[] | undefined) => boolean) | undefined;
		getClasses?: ((value: Date, innerValue: Date[], classes: string) => string | string[]) | undefined;
		calendar?: Date | undefined;
		multiple?: boolean | undefined;
		partialUpdate?: boolean | undefined;
		showWeekNumber?: boolean | undefined;
		titleFormat?: string | undefined;
		getYearPanel?: (() => number[][]) | undefined;
		onDateMouseEnter?: ((value: Date) => void) | undefined;
		onDateMouseLeave?: ((value: Date) => void) | undefined;
		onCalendarChange?: ((value: Date) => void) | undefined;
		onPanelChange?: ((value: PanelType, oldValue: PanelType) => void) | undefined;
		onPick?: ((value: Date) => void) | undefined;
		"onUpdate:value"?: ((v: any, type: string) => void) | undefined;
	}>, () => JSX.Element, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
		type?: unknown;
		value?: unknown;
		defaultValue?: unknown;
		defaultPanel?: unknown;
		disabledDate?: unknown;
		getClasses?: unknown;
		calendar?: unknown;
		multiple?: unknown;
		partialUpdate?: unknown;
		showWeekNumber?: unknown;
		titleFormat?: unknown;
		getYearPanel?: unknown;
		onDateMouseEnter?: unknown;
		onDateMouseLeave?: unknown;
		onCalendarChange?: unknown;
		onPanelChange?: unknown;
		onPick?: unknown;
		"onUpdate:value"?: unknown;
	} & {} & {
		type?: PickerType | undefined;
		value?: Date | Date[] | undefined;
		multiple?: boolean | undefined;
		disabledDate?: ((value: Date, innerValue?: Date[] | undefined) => boolean) | undefined;
		"onUpdate:value"?: ((v: any, type: string) => void) | undefined;
		calendar?: Date | undefined;
		showWeekNumber?: boolean | undefined;
		titleFormat?: string | undefined;
		onDateMouseEnter?: ((value: Date) => void) | undefined;
		onDateMouseLeave?: ((value: Date) => void) | undefined;
		getYearPanel?: (() => number[][]) | undefined;
		defaultValue?: Date | undefined;
		defaultPanel?: PickerType | undefined;
		getClasses?: ((value: Date, innerValue: Date[], classes: string) => string | string[]) | undefined;
		partialUpdate?: boolean | undefined;
		onCalendarChange?: ((value: Date) => void) | undefined;
		onPanelChange?: ((value: PanelType, oldValue: PanelType) => void) | undefined;
		onPick?: ((value: Date) => void) | undefined;
	}>, {}>;
	CalendarRange: import("vue").DefineComponent<DefinePropsToOptions<{
		value?: Date[] | undefined;
		defaultValue?: Date | Date[] | undefined;
		calendar?: Date[] | undefined;
		onCalendarChange?: ((value: DateRange, index?: number | undefined) => void) | undefined;
		"onUpdate:value"?: ((v: Date[], type: string) => void) | undefined;
		type?: PickerType | undefined;
		multiple?: boolean | undefined;
		disabledDate?: ((value: Date, innerValue?: Date[] | undefined) => boolean) | undefined;
		showWeekNumber?: boolean | undefined;
		titleFormat?: string | undefined;
		onDateMouseEnter?: ((value: Date) => void) | undefined;
		onDateMouseLeave?: ((value: Date) => void) | undefined;
		getYearPanel?: (() => number[][]) | undefined;
		defaultPanel?: PickerType | undefined;
		getClasses?: ((value: Date, innerValue: Date[], classes: string) => string | string[]) | undefined;
		partialUpdate?: boolean | undefined;
		onPanelChange?: ((value: PanelType, oldValue: PanelType) => void) | undefined;
		onPick?: ((value: Date) => void) | undefined;
	}>, () => JSX.Element, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
		value?: unknown;
		defaultValue?: unknown;
		calendar?: unknown;
		onCalendarChange?: unknown;
		"onUpdate:value"?: unknown;
		type?: unknown;
		multiple?: unknown;
		disabledDate?: unknown;
		showWeekNumber?: unknown;
		titleFormat?: unknown;
		onDateMouseEnter?: unknown;
		onDateMouseLeave?: unknown;
		getYearPanel?: unknown;
		defaultPanel?: unknown;
		getClasses?: unknown;
		partialUpdate?: unknown;
		onPanelChange?: unknown;
		onPick?: unknown;
	} & {} & {
		type?: PickerType | undefined;
		value?: Date[] | undefined;
		multiple?: boolean | undefined;
		disabledDate?: ((value: Date, innerValue?: Date[] | undefined) => boolean) | undefined;
		"onUpdate:value"?: ((v: Date[], type: string) => void) | undefined;
		calendar?: Date[] | undefined;
		showWeekNumber?: boolean | undefined;
		titleFormat?: string | undefined;
		onDateMouseEnter?: ((value: Date) => void) | undefined;
		onDateMouseLeave?: ((value: Date) => void) | undefined;
		getYearPanel?: (() => number[][]) | undefined;
		defaultValue?: Date | Date[] | undefined;
		defaultPanel?: PickerType | undefined;
		getClasses?: ((value: Date, innerValue: Date[], classes: string) => string | string[]) | undefined;
		partialUpdate?: boolean | undefined;
		onCalendarChange?: ((value: DateRange, index?: number | undefined) => void) | undefined;
		onPanelChange?: ((value: PanelType, oldValue: PanelType) => void) | undefined;
		onPick?: ((value: Date) => void) | undefined;
	}>, {}>;
	TimePanel: import("vue").DefineComponent<DefinePropsToOptions<{
		value?: Date | undefined;
		defaultValue?: Date | undefined;
		format?: string | undefined;
		timeTitleFormat?: string | undefined;
		showTimeHeader?: boolean | undefined;
		disabledTime?: ((v: Date, i?: number | undefined) => boolean) | undefined;
		timePickerOptions?: TimePickerOptions | undefined;
		hourOptions?: number[] | undefined;
		minuteOptions?: number[] | undefined;
		secondOptions?: number[] | undefined;
		hourStep?: number | undefined;
		minuteStep?: number | undefined;
		secondStep?: number | undefined;
		showHour?: boolean | undefined;
		showMinute?: boolean | undefined;
		showSecond?: boolean | undefined;
		use12h?: boolean | undefined;
		scrollDuration?: number | undefined;
		onClickTitle?: ((payload: MouseEvent) => void) | undefined;
		"onUpdate:value"?: ((value: Date, type: string, index?: number | undefined) => void) | undefined;
	}>, () => JSX.Element, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
		value?: unknown;
		defaultValue?: unknown;
		format?: unknown;
		timeTitleFormat?: unknown;
		showTimeHeader?: unknown;
		disabledTime?: unknown;
		timePickerOptions?: unknown;
		hourOptions?: unknown;
		minuteOptions?: unknown;
		secondOptions?: unknown;
		hourStep?: unknown;
		minuteStep?: unknown;
		secondStep?: unknown;
		showHour?: unknown;
		showMinute?: unknown;
		showSecond?: unknown;
		use12h?: unknown;
		scrollDuration?: unknown;
		onClickTitle?: unknown;
		"onUpdate:value"?: unknown;
	} & {} & {
		value?: Date | undefined;
		format?: string | undefined;
		"onUpdate:value"?: ((value: Date, type: string, index?: number | undefined) => void) | undefined;
		disabledTime?: ((v: Date, i?: number | undefined) => boolean) | undefined;
		defaultValue?: Date | undefined;
		showHour?: boolean | undefined;
		showMinute?: boolean | undefined;
		showSecond?: boolean | undefined;
		use12h?: boolean | undefined;
		timeTitleFormat?: string | undefined;
		showTimeHeader?: boolean | undefined;
		timePickerOptions?: TimePickerOptions | undefined;
		hourOptions?: number[] | undefined;
		minuteOptions?: number[] | undefined;
		secondOptions?: number[] | undefined;
		hourStep?: number | undefined;
		minuteStep?: number | undefined;
		secondStep?: number | undefined;
		scrollDuration?: number | undefined;
		onClickTitle?: ((payload: MouseEvent) => void) | undefined;
	}>, {}>;
	TimeRange: import("vue").DefineComponent<DefinePropsToOptions<{
		value?: Date[] | undefined;
		defaultValue?: Date | Date[] | undefined;
		"onUpdate:value"?: ((value: Date[], type: string, index?: number | undefined) => void) | undefined;
		format?: string | undefined;
		disabledTime?: ((v: Date, i?: number | undefined) => boolean) | undefined;
		showHour?: boolean | undefined;
		showMinute?: boolean | undefined;
		showSecond?: boolean | undefined;
		use12h?: boolean | undefined;
		timeTitleFormat?: string | undefined;
		showTimeHeader?: boolean | undefined;
		timePickerOptions?: TimePickerOptions | undefined;
		hourOptions?: number[] | undefined;
		minuteOptions?: number[] | undefined;
		secondOptions?: number[] | undefined;
		hourStep?: number | undefined;
		minuteStep?: number | undefined;
		secondStep?: number | undefined;
		scrollDuration?: number | undefined;
		onClickTitle?: ((payload: MouseEvent) => void) | undefined;
	}>, () => JSX.Element, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
		value?: unknown;
		defaultValue?: unknown;
		"onUpdate:value"?: unknown;
		format?: unknown;
		disabledTime?: unknown;
		showHour?: unknown;
		showMinute?: unknown;
		showSecond?: unknown;
		use12h?: unknown;
		timeTitleFormat?: unknown;
		showTimeHeader?: unknown;
		timePickerOptions?: unknown;
		hourOptions?: unknown;
		minuteOptions?: unknown;
		secondOptions?: unknown;
		hourStep?: unknown;
		minuteStep?: unknown;
		secondStep?: unknown;
		scrollDuration?: unknown;
		onClickTitle?: unknown;
	} & {} & {
		value?: Date[] | undefined;
		format?: string | undefined;
		"onUpdate:value"?: ((value: Date[], type: string, index?: number | undefined) => void) | undefined;
		disabledTime?: ((v: Date, i?: number | undefined) => boolean) | undefined;
		defaultValue?: Date | Date[] | undefined;
		showHour?: boolean | undefined;
		showMinute?: boolean | undefined;
		showSecond?: boolean | undefined;
		use12h?: boolean | undefined;
		timeTitleFormat?: string | undefined;
		showTimeHeader?: boolean | undefined;
		timePickerOptions?: TimePickerOptions | undefined;
		hourOptions?: number[] | undefined;
		minuteOptions?: number[] | undefined;
		secondOptions?: number[] | undefined;
		hourStep?: number | undefined;
		minuteStep?: number | undefined;
		secondStep?: number | undefined;
		scrollDuration?: number | undefined;
		onClickTitle?: ((payload: MouseEvent) => void) | undefined;
	}>, {}>;
	DateTime: import("vue").DefineComponent<DefinePropsToOptions<{
		showTimePanel?: boolean | undefined;
		onShowTimePanelChange?: ((v: boolean) => void) | undefined;
		type?: PickerType | undefined;
		value?: ((Date | Date[]) & Date) | undefined;
		defaultValue?: Date | undefined;
		defaultPanel?: PickerType | undefined;
		disabledDate?: ((value: Date, innerValue?: Date[] | undefined) => boolean) | undefined;
		getClasses?: ((value: Date, innerValue: Date[], classes: string) => string | string[]) | undefined;
		calendar?: Date | undefined;
		multiple?: boolean | undefined;
		partialUpdate?: boolean | undefined;
		showWeekNumber?: boolean | undefined;
		titleFormat?: string | undefined;
		getYearPanel?: (() => number[][]) | undefined;
		onDateMouseEnter?: ((value: Date) => void) | undefined;
		onDateMouseLeave?: ((value: Date) => void) | undefined;
		onCalendarChange?: ((value: Date) => void) | undefined;
		onPanelChange?: ((value: PanelType, oldValue: PanelType) => void) | undefined;
		onPick?: ((value: Date) => void) | undefined;
		"onUpdate:value"?: (((v: any, type: string) => void) & ((value: Date, type: string, index?: number | undefined) => void)) | undefined;
		format?: string | undefined;
		timeTitleFormat?: string | undefined;
		showTimeHeader?: boolean | undefined;
		disabledTime?: ((v: Date, i?: number | undefined) => boolean) | undefined;
		timePickerOptions?: TimePickerOptions | undefined;
		hourOptions?: number[] | undefined;
		minuteOptions?: number[] | undefined;
		secondOptions?: number[] | undefined;
		hourStep?: number | undefined;
		minuteStep?: number | undefined;
		secondStep?: number | undefined;
		showHour?: boolean | undefined;
		showMinute?: boolean | undefined;
		showSecond?: boolean | undefined;
		use12h?: boolean | undefined;
		scrollDuration?: number | undefined;
		onClickTitle?: ((payload: MouseEvent) => void) | undefined;
	}>, () => JSX.Element, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
		showTimePanel?: unknown;
		onShowTimePanelChange?: unknown;
		type?: unknown;
		value?: unknown;
		defaultValue?: unknown;
		defaultPanel?: unknown;
		disabledDate?: unknown;
		getClasses?: unknown;
		calendar?: unknown;
		multiple?: unknown;
		partialUpdate?: unknown;
		showWeekNumber?: unknown;
		titleFormat?: unknown;
		getYearPanel?: unknown;
		onDateMouseEnter?: unknown;
		onDateMouseLeave?: unknown;
		onCalendarChange?: unknown;
		onPanelChange?: unknown;
		onPick?: unknown;
		"onUpdate:value"?: unknown;
		format?: unknown;
		timeTitleFormat?: unknown;
		showTimeHeader?: unknown;
		disabledTime?: unknown;
		timePickerOptions?: unknown;
		hourOptions?: unknown;
		minuteOptions?: unknown;
		secondOptions?: unknown;
		hourStep?: unknown;
		minuteStep?: unknown;
		secondStep?: unknown;
		showHour?: unknown;
		showMinute?: unknown;
		showSecond?: unknown;
		use12h?: unknown;
		scrollDuration?: unknown;
		onClickTitle?: unknown;
	} & {} & {
		type?: PickerType | undefined;
		value?: ((Date | Date[]) & Date) | undefined;
		multiple?: boolean | undefined;
		format?: string | undefined;
		disabledDate?: ((value: Date, innerValue?: Date[] | undefined) => boolean) | undefined;
		"onUpdate:value"?: (((v: any, type: string) => void) & ((value: Date, type: string, index?: number | undefined) => void)) | undefined;
		disabledTime?: ((v: Date, i?: number | undefined) => boolean) | undefined;
		calendar?: Date | undefined;
		showWeekNumber?: boolean | undefined;
		titleFormat?: string | undefined;
		onDateMouseEnter?: ((value: Date) => void) | undefined;
		onDateMouseLeave?: ((value: Date) => void) | undefined;
		getYearPanel?: (() => number[][]) | undefined;
		defaultValue?: Date | undefined;
		defaultPanel?: PickerType | undefined;
		getClasses?: ((value: Date, innerValue: Date[], classes: string) => string | string[]) | undefined;
		partialUpdate?: boolean | undefined;
		onCalendarChange?: ((value: Date) => void) | undefined;
		onPanelChange?: ((value: PanelType, oldValue: PanelType) => void) | undefined;
		onPick?: ((value: Date) => void) | undefined;
		showHour?: boolean | undefined;
		showMinute?: boolean | undefined;
		showSecond?: boolean | undefined;
		use12h?: boolean | undefined;
		timeTitleFormat?: string | undefined;
		showTimeHeader?: boolean | undefined;
		timePickerOptions?: TimePickerOptions | undefined;
		hourOptions?: number[] | undefined;
		minuteOptions?: number[] | undefined;
		secondOptions?: number[] | undefined;
		hourStep?: number | undefined;
		minuteStep?: number | undefined;
		secondStep?: number | undefined;
		scrollDuration?: number | undefined;
		onClickTitle?: ((payload: MouseEvent) => void) | undefined;
		showTimePanel?: boolean | undefined;
		onShowTimePanelChange?: ((v: boolean) => void) | undefined;
	}>, {}>;
	DateTimeRange: import("vue").DefineComponent<DefinePropsToOptions<{
		showTimePanel?: boolean | undefined;
		onShowTimePanelChange?: ((v: boolean) => void) | undefined;
		value?: Date[] | undefined;
		defaultValue?: Date | Date[] | undefined;
		"onUpdate:value"?: (((value: Date[], type: string, index?: number | undefined) => void) & ((v: Date[], type: string) => void)) | undefined;
		format?: string | undefined;
		disabledTime?: ((v: Date, i?: number | undefined) => boolean) | undefined;
		showHour?: boolean | undefined;
		showMinute?: boolean | undefined;
		showSecond?: boolean | undefined;
		use12h?: boolean | undefined;
		timeTitleFormat?: string | undefined;
		showTimeHeader?: boolean | undefined;
		timePickerOptions?: TimePickerOptions | undefined;
		hourOptions?: number[] | undefined;
		minuteOptions?: number[] | undefined;
		secondOptions?: number[] | undefined;
		hourStep?: number | undefined;
		minuteStep?: number | undefined;
		secondStep?: number | undefined;
		scrollDuration?: number | undefined;
		onClickTitle?: ((payload: MouseEvent) => void) | undefined;
		calendar?: Date[] | undefined;
		onCalendarChange?: ((value: DateRange, index?: number | undefined) => void) | undefined;
		type?: PickerType | undefined;
		multiple?: boolean | undefined;
		disabledDate?: ((value: Date, innerValue?: Date[] | undefined) => boolean) | undefined;
		showWeekNumber?: boolean | undefined;
		titleFormat?: string | undefined;
		onDateMouseEnter?: ((value: Date) => void) | undefined;
		onDateMouseLeave?: ((value: Date) => void) | undefined;
		getYearPanel?: (() => number[][]) | undefined;
		defaultPanel?: PickerType | undefined;
		getClasses?: ((value: Date, innerValue: Date[], classes: string) => string | string[]) | undefined;
		partialUpdate?: boolean | undefined;
		onPanelChange?: ((value: PanelType, oldValue: PanelType) => void) | undefined;
		onPick?: ((value: Date) => void) | undefined;
	}>, () => JSX.Element, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
		showTimePanel?: unknown;
		onShowTimePanelChange?: unknown;
		value?: unknown;
		defaultValue?: unknown;
		"onUpdate:value"?: unknown;
		format?: unknown;
		disabledTime?: unknown;
		showHour?: unknown;
		showMinute?: unknown;
		showSecond?: unknown;
		use12h?: unknown;
		timeTitleFormat?: unknown;
		showTimeHeader?: unknown;
		timePickerOptions?: unknown;
		hourOptions?: unknown;
		minuteOptions?: unknown;
		secondOptions?: unknown;
		hourStep?: unknown;
		minuteStep?: unknown;
		secondStep?: unknown;
		scrollDuration?: unknown;
		onClickTitle?: unknown;
		calendar?: unknown;
		onCalendarChange?: unknown;
		type?: unknown;
		multiple?: unknown;
		disabledDate?: unknown;
		showWeekNumber?: unknown;
		titleFormat?: unknown;
		onDateMouseEnter?: unknown;
		onDateMouseLeave?: unknown;
		getYearPanel?: unknown;
		defaultPanel?: unknown;
		getClasses?: unknown;
		partialUpdate?: unknown;
		onPanelChange?: unknown;
		onPick?: unknown;
	} & {} & {
		type?: PickerType | undefined;
		value?: Date[] | undefined;
		multiple?: boolean | undefined;
		format?: string | undefined;
		disabledDate?: ((value: Date, innerValue?: Date[] | undefined) => boolean) | undefined;
		"onUpdate:value"?: (((value: Date[], type: string, index?: number | undefined) => void) & ((v: Date[], type: string) => void)) | undefined;
		disabledTime?: ((v: Date, i?: number | undefined) => boolean) | undefined;
		calendar?: Date[] | undefined;
		showWeekNumber?: boolean | undefined;
		titleFormat?: string | undefined;
		onDateMouseEnter?: ((value: Date) => void) | undefined;
		onDateMouseLeave?: ((value: Date) => void) | undefined;
		getYearPanel?: (() => number[][]) | undefined;
		defaultValue?: Date | Date[] | undefined;
		defaultPanel?: PickerType | undefined;
		getClasses?: ((value: Date, innerValue: Date[], classes: string) => string | string[]) | undefined;
		partialUpdate?: boolean | undefined;
		onCalendarChange?: ((value: DateRange, index?: number | undefined) => void) | undefined;
		onPanelChange?: ((value: PanelType, oldValue: PanelType) => void) | undefined;
		onPick?: ((value: Date) => void) | undefined;
		showHour?: boolean | undefined;
		showMinute?: boolean | undefined;
		showSecond?: boolean | undefined;
		use12h?: boolean | undefined;
		timeTitleFormat?: string | undefined;
		showTimeHeader?: boolean | undefined;
		timePickerOptions?: TimePickerOptions | undefined;
		hourOptions?: number[] | undefined;
		minuteOptions?: number[] | undefined;
		secondOptions?: number[] | undefined;
		hourStep?: number | undefined;
		minuteStep?: number | undefined;
		secondStep?: number | undefined;
		scrollDuration?: number | undefined;
		onClickTitle?: ((payload: MouseEvent) => void) | undefined;
		showTimePanel?: boolean | undefined;
		onShowTimePanelChange?: ((v: boolean) => void) | undefined;
	}>, {}>;
};
export default _default;

export {};
