version: '3.8'

services:
  postgres:
    image: pgvector/pgvector:pg16
    restart: always
    environment:
      POSTGRES_DB: chatwoot_development
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    volumes:
      - db-data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    restart: always
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    env_file: .env
    volumes:
      - redis-data:/data

  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"

  rails:
    build:
      context: .
      dockerfile: docker/dockerfiles/rails.Dockerfile
    env_file: .env
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
      - mailhog
    # Monta o código fonte e garante que entrypoints não sejam sobrescritos
    volumes:
      - ./:/app:delegated
      - ./docker/entrypoints:/usr/local/bin/entrypoints:delegated
      - node_modules:/app/node_modules
      - packs:/app/public/packs
      - cache:/app/tmp/cache
      - bundle:/usr/local/bundle
    entrypoint: ["/usr/local/bin/entrypoints/rails.sh"]
    command: ["bundle", "exec", "rails", "server", "-b", "0.0.0.0", "-p", "3000"]

  sidekiq:
    build:
      context: .
      dockerfile: docker/dockerfiles/rails.Dockerfile
    env_file: .env
    depends_on:
      - postgres
      - redis
      - mailhog
    volumes:
      - ./:/app:delegated
      - ./docker/entrypoints:/usr/local/bin/entrypoints:delegated
      - node_modules:/app/node_modules
      - packs:/app/public/packs
      - cache:/app/tmp/cache
      - bundle:/usr/local/bundle
    entrypoint: ["/usr/local/bin/entrypoints/rails.sh"]
    command: ["bundle", "exec", "sidekiq", "-C", "config/sidekiq.yml"]

  vite:
    build:
      context: .
      dockerfile: docker/dockerfiles/vite.Dockerfile
    env_file: .env
    ports:
      - "3036:3036"
    depends_on:
      - rails
    volumes:
      - ./:/app:delegated
      - ./docker/entrypoints:/usr/local/bin/entrypoints:delegated
      - node_modules:/app/node_modules
      - packs:/app/public/packs
      - cache:/app/tmp/cache
    entrypoint: ["/usr/local/bin/entrypoints/vite.sh"]
    command: ["pnpm", "run", "dev"]

volumes:
  db-data:
  redis-data:
  node_modules:
  packs:
  cache:
  bundle:
