#!/usr/bin/env ruby

puts "🔍 Generating Apple Messages for Business JSON Payloads"
puts "=" * 60

# Find the test messages we created
messages = Message.where(content_type: ['apple_quick_reply', 'apple_list_picker', 'apple_time_picker'])
                  .order(:id)
                  .last(3)

if messages.empty?
  puts "❌ No Apple Messages found. Run test_identifier_generation.rb first."
  exit 1
end

output_file = 'apple_messages_payloads.json'
payloads = {}

messages.each do |message|
  puts "\n📱 Processing #{message.content_type.humanize} (ID: #{message.id})"
  
  # This is what would be sent to Apple's API
  payload = {
    type: 'interactive',
    interactive_type: message.content_type.sub('apple_', ''),
    interactive_data: message.content_attributes
  }
  
  payloads[message.content_type] = {
    message_id: message.id,
    content_type: message.content_type,
    content: message.content,
    content_attributes: message.content_attributes,
    apple_payload: payload
  }
  
  puts "✅ Generated payload for #{message.content_type}"
end

# Write to JSON file
File.write(output_file, JSON.pretty_generate(payloads))

puts "\n📄 JSON payloads written to: #{output_file}"
puts "\n🔍 Payload Summary:"
puts "-" * 40

payloads.each do |type, data|
  puts "\n#{type.upcase}:"
  puts "  Message ID: #{data[:message_id]}"
  puts "  Content: #{data[:content]}"
  
  case type
  when 'apple_quick_reply'
    puts "  Items: #{data[:content_attributes]['items'].length}"
    data[:content_attributes]['items'].each_with_index do |item, i|
      puts "    #{i + 1}. #{item['title']} (#{item['identifier']})"
    end
    
  when 'apple_list_picker'
    puts "  Sections: #{data[:content_attributes]['sections'].length}"
    data[:content_attributes]['sections'].each_with_index do |section, i|
      puts "    Section #{i + 1}: #{section['title']} (#{section['items'].length} items)"
      section['items'].each_with_index do |item, j|
        puts "      #{j + 1}. #{item['title']} (#{item['identifier']})"
      end
    end
    
  when 'apple_time_picker'
    puts "  Event: #{data[:content_attributes]['event']['title']}"
    puts "  Timeslots: #{data[:content_attributes]['timeslots'].length}"
    data[:content_attributes]['timeslots'].each_with_index do |slot, i|
      puts "    #{i + 1}. #{slot['startTime']} (#{slot['identifier']})"
    end
  end
end

puts "\n📋 Apple Messages API Format:"
puts "-" * 40

payloads.each do |type, data|
  puts "\n#{type.upcase} API Payload:"
  puts JSON.pretty_generate(data[:apple_payload])
end

puts "\n💡 Notes:"
puts "• Identifiers are auto-generated by the platform"
puts "• Agents only see titles/content, not identifiers"
puts "• JSON structure follows Apple MSP specifications"
puts "• Review #{output_file} for complete payload details"