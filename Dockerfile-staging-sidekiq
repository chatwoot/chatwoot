# Chatwoot Staging Sidekiq Worker Image
# Uses base image with all dependencies pre-installed
# Build time: ~30-60 seconds (only code copy, no asset compilation needed)

ARG BASE_IMAGE_TAG=v4.0.4-base1-deps
ARG ECR_URL

# Use deps base image directly (Sidekiq doesn't need asset compilation)
FROM ${ECR_URL}/chatwoot-base:${BASE_IMAGE_TAG} AS builder

ARG CIRCLE_SHA1="unknown"

ENV RAILS_ENV=production

WORKDIR /app

# Copy application code (dependencies already installed in base image)
COPY . /app

# Create git SHA for version tracking
RUN mkdir -p /app/log \
  && echo "${CIRCLE_SHA1:-unknown}" > /app/.git_sha

# Runtime stage: Minimal image for Sidekiq workers
FROM ruby:3.3.3-alpine3.19

ARG BUNDLER_VERSION=2.5.11

LABEL maintainer="Delta Exchange <dev@delta.exchange>"
LABEL description="Chatwoot v4.0.4 Staging Sidekiq Worker"
LABEL environment="staging"

ENV RAILS_ENV=production \
    BUNDLE_PATH="/gems" \
    BUNDLE_FORCE_RUBY_PLATFORM=1 \
    BUNDLER_VERSION=${BUNDLER_VERSION}

# Install only runtime dependencies
RUN apk update && apk add --no-cache \
  openssl \
  tzdata \
  postgresql-client \
  vips \
  && gem install bundler -v ${BUNDLER_VERSION} --no-document \
  && rm -rf /var/cache/apk/*

# Copy Node.js from node image (needed for ExecJS runtime)
COPY --from=node:23-alpine /usr/local/bin/node /usr/local/bin/
COPY --from=node:23-alpine /usr/local/lib/node_modules /usr/local/lib/node_modules

# Copy only gems from builder (not entire /gems with cache)
COPY --from=builder /gems/ruby /gems/ruby

WORKDIR /app

# Copy Gemfile first for bundle config
COPY --from=builder /app/Gemfile /app/Gemfile.lock ./

# Configure bundler to use the correct gem path and exclude dev/test gems
RUN bundle config set --local path "/gems" && \
    bundle config set --local without "development:test"

# Copy only necessary application files (Sidekiq doesn't need compiled assets or node_modules)
COPY --from=builder /app/app ./app
COPY --from=builder /app/bin ./bin
COPY --from=builder /app/config ./config
COPY --from=builder /app/db ./db
COPY --from=builder /app/docker ./docker
COPY --from=builder /app/lib ./lib
COPY --from=builder /app/Rakefile ./
COPY --from=builder /app/.git_sha ./

EXPOSE 5151

CMD ["bundle", "exec", "sidekiq", "-C", "config/sidekiq.yml"]
