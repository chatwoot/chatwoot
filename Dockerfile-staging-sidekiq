# Optimized Sidekiq Dockerfile - Build Stage
FROM ruby:3.3.3-alpine3.19 AS builder

ARG BUNDLE_WITHOUT="development:test"
ARG CIRCLE_SHA1="unknown"
ENV BUNDLE_WITHOUT=${BUNDLE_WITHOUT}
ENV BUNDLER_VERSION=2.5.11
ENV BUNDLE_PATH="/gems"
ENV BUNDLE_JOBS="8"
ENV MAKE="make -j8"
ENV RAILS_ENV=production

# Install build dependencies only
RUN apk update && apk add --no-cache \
  build-base \
  gcc \
  g++ \
  make \
  musl-dev \
  ruby-dev \
  openssl-dev \
  postgresql-dev \
  git \
  linux-headers \
  && gem install bundler

WORKDIR /app

# Copy dependency files and install gems with cache mounts
COPY Gemfile Gemfile.lock ./
RUN --mount=type=cache,target=/gems/cache \
    --mount=type=cache,target=/tmp/bundle-cache \
    bundle config set --local force_ruby_platform true \
  && bundle config set --local cache_path /tmp/bundle-cache \
  && bundle config set without 'development test' \
  && bundle install -j${BUNDLE_JOBS}

# Copy source code
COPY . /app

# Create git SHA and cleanup
RUN mkdir -p /app/log \
  && echo "${CIRCLE_SHA1:-unknown}" > /app/.git_sha \
  && rm -rf /gems/ruby/3.3.0/cache/*.gem \
  && find /gems/ruby/3.3.0/gems/ \( -name "*.c" -o -name "*.o" \) -delete

# Runtime Stage - Minimal dependencies
FROM ruby:3.3.3-alpine3.19

ENV BUNDLER_VERSION=2.5.11
ENV BUNDLE_PATH="/gems"
ENV RAILS_ENV=production

# Install runtime dependencies only
RUN apk update && apk add --no-cache \
  openssl \
  tzdata \
  postgresql-client \
  vips \
  && gem install bundler

WORKDIR /app

# Copy gems and app from builder
COPY --from=builder /gems/ /gems/
COPY --from=builder /app /app

EXPOSE 5151
CMD ["bundle", "exec", "sidekiq", "-C", "config/sidekiq.yml"]